apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /mnt/data/minio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: default
stringData:
  root-user: console
  root-password: console123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: volume-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /data && chmod -R 750 /data"]
        volumeMounts:
        - name: minio-storage
          mountPath: /data
      containers:
      - name: minio
        image: quay.io/minio/minio
        imagePullPolicy: Always
        args:
          - server
          - --console-address
          - ":43529"
          - /data
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: root-user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: root-password
        ports:
        - containerPort: 9000
          name: minio-api
        - containerPort: 43529
          name: minio-console
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: minio-api
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: minio-api
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: minio-storage
          mountPath: /data
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: minio
  ports:
    - name: minio-api
      port: 9000
      targetPort: 9000
    - name: minio-console
      port: 43529
      targetPort: 43529

---
# minio-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  namespace: default
spec:
  ingressClassName: traefik
  rules:
    - host: minio.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio-service
                port:
                  number: 9000
    - host: minio-console.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio-service
                port:
                  number: 43529
  tls:
    - hosts:
        - minio.local
      secretName: minio-tls
    - hosts:
        - minio-console.local
      secretName: minio-console-tls 
